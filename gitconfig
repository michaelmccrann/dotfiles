[user]
	name = Michael McCrann
	email = jky@123mail.org
[core]
	editor = vim
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = ~/.gitignore
[sendemail]
	smtpencryption = tls
	smtpserver = xx
	smtpuser = 
	smtppass = 
	smtpserverport = 587
[web]
	browser = google-chrome
[instaweb]
	httpd = apache2 -f
[rerere]
	enabled = 1
	autoupdate = 1
[push]
	default = matching
[color]
	ui = auto
[color "branch"]
	current = yellow bold
	local = green bold
	remote = cyan bold
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse
[color "status"]
	added = green bold
	changed = yellow bold
	untracked = red bold
[diff]
	tool = vimdiff
[difftool]
	prompt = false
[github]
	user = xxx
	token = xx
[gitflow "prefix"]
	versiontag = v
[sequence]
	editor = interactive-rebase-tool
[alias]
	ad = add --all
	ai = add -i
	#############
	# ap = apply
	# as = apply --stat
	# ac = apply --check
	#############
	# ama = am --abort
	# amr = am --resolved
	# ams = am --skip
	#############
	br = branch
	bra = branch -a
	brd = branch -d
	brdd = branch -D
	# brr = branch -r
	# brc = rev-parse --abbrev-ref HEAD
	# bru = !git rev-parse --abbrev-ref --symbolic-full-name "@{u}"
	# brs = !git-branch-status
	#############
	cmt = commit
	# cmta = commit -a
	# cmtm = commit -m
	# cmtam = commit -am
	# cmtem = commit --allow-empty -m
	# cmtd = commit --amend
	# cmtad = commit -a --amend
	# cmted = commit --allow-empty --amend
	#############
	cln = clone
	# clnd = clone --depth 1
	# clng = !sh -c 'git clone git://github.com/$1 $(basename $1)' -
	# clngp = !sh -c 'git clone git@github.com:$1 $(basename $1)' -
	# clngu = !sh -c 'git clone git@github.com:$(git config --get user.username)/$1 $1' -
	#############
	# cp = cherry-pick
	# cpa = cherry-pick --abort
	# cpc = cherry-pick --continue
	#############
	# d = diff
	# dp = diff --patience
	# dc = diff --cached
	# dk = diff --check
	# dck = diff --cached --check
	# dt = difftool
	# dct = difftool --cached
	#############
	fch = fetch
	# fcho = fetch origin
	# fchu = fetch upstream
	#############
	# fp = format-patch
	#############
	# fk = fsck
	#############
	# g = grep -p
	#############
	lg = log --oneline
	lgg = log --oneline --graph --decorate
	#############
	ls = ls-files
	# lsf = !git ls-files | grep -i
	#############
	# mrg = merge
	# mrga = merge --abort
	# mrgc = merge --continue
	# mrgs = merge --skip
	#############
	co = checkout
	com = checkout master
	cob = checkout -b
	# copr = !sh -c 'git fo pull/$1/head:pr-$1 && git o pr-$1'
	#############
	# pr = prune -v
	#############
	psh = push
	# pshf = push -f
	# pshu = push -u
	# psht = push --tags
	# #############
	# psho = push origin
	# pshao = push --all origin
	# pshfo = push -f origin
	# pshuo = push -u origin
	# #############
	# pshom = push origin master
	# pshaom = push --all origin master
	# pshfom = push -f origin master
	# pshuom = push -u origin master
	# pshoc = !git push origin $(git bc)
	# pshaoc = !git push --all origin $(git bc)
	# pshfoc = !git push -f origin $(git bc)
	# pshuoc = !git push -u origin $(git bc)
	# pshdc = !git push origin :$(git bc)
	# #############
	pul = pull
	# pulb = pull --rebase
	#############
	# pulo = pull origin
	# pubo = pull --rebase origin
	# pulom = pull origin master
	# puloc = !git pull origin $(git bc)
	# pubom = pull --rebase origin master
	# puboc = !git pull --rebase origin $(git bc)
	# #############
	# pulu = pull upstream
	# pulum = pull upstream master
	# puluc = !git pull upstream $(git bc)
	# pubum = pull --rebase upstream master
	# pubuc = !git pull --rebase upstream $(git bc)
	# #############
	# rb = rebase
	# rba = rebase --abort
	# rbc = rebase --continue
	# rbi = rebase --interactive
	# rbs = rebase --skip
	# #############
	# re = reset
	# rh = reset HEAD
	# reh = reset --hard
	# rem = reset --mixed
	# res = reset --soft
	# rehh = reset --hard HEAD
	# remh = reset --mixed HEAD
	# resh = reset --soft HEAD
	# rehom = reset --hard origin/master
	# #############
	# rmt = remote
	# ra = remote add
	# rr = remote rm
	# rv = remote -v
	# rn = remote rename
	# rp = remote prune
	# rs = remote show
	# rao = remote add origin
	# rau = remote add upstream
	# rro = remote remove origin
	# rru = remote remove upstream
	# rso = remote show origin
	# rsu = remote show upstream
	# rpo = remote prune origin
	# rpu = remote prune upstream
	# #############
	# rmf = rm -f
	# rmrf = rm -r -f
	#############
	s = status
	sb = status -s -b
	#############
	# sa = stash apply
	# sc = stash clear
	# sd = stash drop
	# sl = stash list
	# sp = stash pop
	# ss = stash save
	# ssk = stash save -k
	# sw = stash show
	# st = !git stash list | wc -l 2>/dev/null | grep -oEi '[0-9][0-9]*'
	#############
	t = tag
	td = tag -d
	#############
	# w = show
	# wp = show -p
	# wr = show -p --no-color
	#############
	# svnr = svn rebase
	# svnd = svn dcommit
	# svnl = svn log --oneline --show-commit
	#############
	# subadd = !sh -c 'git submodule add git://github.com/$1 $2/$(basename $1)' -
	# subrm = !sh -c 'git submodule deinit -f -- $1 && rm -rf .git/modules/$1 && git rm -f $1' -
	# subup = submodule update --init --recursive
	# subpull = !git submodule foreach git pull --tags origin master
	# #############
	# assume = update-index --assume-unchanged
	# unassume = update-index --no-assume-unchanged
	# assumed = !git ls -v | grep ^h | cut -c 3-
	# unassumeall = !git assumed | xargs git unassume
	# assumeall = !git status -s | awk {'print $2'} | xargs git assume
	#############
	# bump = !sh -c 'git commit -am \"Version bump v$1\" && git psuoc && git release $1' -
	# release = !sh -c 'git tag v$1 && git pst' -
	# unrelease = !sh -c 'git tag -d v$1 && git pso :v$1' -
	# merged = !sh -c 'git o master && git plom && git bd $1 && git rpo' -
	# aliases = !git config -l | grep alias | cut -c 7-
	# snap = !git stash save 'snapshot: $(date)' && git stash apply 'stash@{0}'
	# bare = !sh -c 'git symbolic-ref HEAD refs/heads/$1 && git rm --cached -r . && git clean -xfd' -
	# whois = !sh -c 'git log -i -1 --author=\"$1\" --pretty=\"format:%an <%ae>\"' -
	# serve = daemon --reuseaddr --verbose --base-path=. --export-all ./.git
	#############
	# behind = !git rev-list --left-only --count $(git bu)...HEAD
	# ahead = !git rev-list --right-only --count $(git bu)...HEAD
	# #############
	# ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	# theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	# subrepo = !sh -c 'git filter-branch --prune-empty --subdirectory-filter $1 master' -
	# human = name-rev --name-only --refs=refs/heads/*
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
